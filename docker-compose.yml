version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: api
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=production
    volumes:
      - ./data:/app/data:ro
      - ./outputs:/app/outputs
    depends_on:
      - redis
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: web
    ports:
      - "8501:8501"
    environment:
      - PYTHONPATH=/app
      - API_URL=http://api:8000
    depends_on:
      - api
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - web
    restart: unless-stopped

volumes:
  redis_data:

networks:
  default:
    name: semantic-clustering